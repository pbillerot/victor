[{"categories":null,"contents":"   VICTOR est une application WEB pour gérer le contenu d\u0026rsquo;un site HUGO.\nUn site Hugo n\u0026rsquo;est constituée que de fichiers statiques et par conséquent sans utilisation de base de données. Un simple éditeur de texte suffit pour gérer le contenu dun site Hugo.\nVictor va permettre de créer, modifier, supprimer les fichiers du site directement en ligne.\nEn gros Victor est un gestionnaire de fichiers sur le web avec la particularités de pouvoir générer et publier directement le site hugo en ligne. Il va piloter un environnement de test, un environnement de production et éventuellement le déploiement sur un autre serveur.\nL\u0026rsquo;objectif de ce guide est de vous présenter :\n comment installer l\u0026rsquo;application sur un serveur dans un container DOCKER l\u0026rsquo;organisation des répertoires du site le gestionnaire de fichiers l\u0026rsquo;éditeur de contenu et de configuration du site l\u0026rsquo;éditeur d\u0026rsquo;image l\u0026rsquo;outil de diagrammes DRAWIO qui a été intégré dans l\u0026rsquo;application les fonctions de publication du site ","permalink":"/help/posts/intro/","tags":["intro"],"title":"Introduction"},{"categories":null,"contents":"    Un explorateur de fichiers Victor est tout simplement un explorateur de fichiers qui permet de créer/visualiser/modifier/supprimer les fichiers et sous-répertoires du répertoire content du site content\r├── media\r│ ├── agile.jpg\r│ ├── bee.svg\r│ ├── bg-bee.svg\r│ └── icone-bee.svg\r├── posts\r│ └── premier.md\r└── site\r└── config.yaml -\u0026gt; ../../config.yaml\r  l\u0026rsquo;action pour changer de répertoire ou visualiser/modifier un fichier se fera par un simple clic.\nDans un répertoire,  pour créer un nouveau fichier,  pour créer un sous-répertoire,  pour déverser des fichiers (à noter que le glisser-déposer à partir de votre explorateur de fichier local est possible)\nPour manipuler un élément, il faudra effectuer un clic long et faire apparaître les boutons d\u0026rsquo;action sur l\u0026rsquo;élément sélectionné :  renommer / copier / déplacer /  supprimer /  télécharger.\nExemple ci-après sur bee.svg\n    Le bouton  va permettre de passer en mode multiple pour sélectionner plusieurs éléments et réaliser des opérations groupées.\nLe bouton  pour visualiser le site de test.\n    \nÉtats des documents 4 états pour un document :\n le document est en ligne le document sera prochainement en ligne (la date de publication est marquée en rouge) le document est en brouillon (une icône rouge derrière le titre du document) le document est expiré (la date d\u0026rsquo;expiration est marquée en rouge) (À noter que la date d\u0026rsquo;expiration apparaît aussi en bas du document visualisé sur le site de test - voir l\u0026rsquo;image ci-dessus)   ","permalink":"/help/posts/explorateur/","tags":["explorateur"],"title":"L'explorateur du contenu"},{"categories":null,"contents":"  \rL\u0026rsquo;éditeur de document va s\u0026rsquo;ouvrir :\n  1 à partir de Victor en cliquant sur l\u0026rsquo;icône  du document  2 depuis le site de test via l\u0026rsquo;icône  en bas du document\nDans ce cas, les modifications enregistrées à partir de l\u0026rsquo;éditeur seront rendues automatiquement dans l\u0026rsquo;aperçu.  L\u0026rsquo;aperçu du document est accessible :\n  3 via le bouton  de la fenêtre Victor  4 via le bouton  de l\u0026rsquo;éditeur ","permalink":"/help/posts/doc-edit/","tags":["editeur"],"title":"L'éditeur de document"},{"categories":null,"contents":"Touches fonctions  ctrl+s : sauvegarde du document\nctrl+/ : mise en commentaire de la méta-données\nctrl+espace : liste et complétion des shortcodes\nMéta-données title:Exemple pagedraft:falsedate:2020-12-26tags:- contenucover:/media/image.jpgcategories:- newspublishDate:2021-02-10expiryDate:2021-05-01_build:list:falsestyle:bee-doc bee-chansonmenu:page:weight:10parent:shortcodeShortcode {{\u0026lt;bouton [icone=\u0026quot;nom icone\u0026quot;] [image=\u0026quot;image\u0026quot;] titre=\u0026quot;titre\u0026quot; [lien=\u0026quot;lien\u0026quot;]\u0026gt;}}\r{{\u0026lt;cartes taille=\u0026quot;s m l xl\u0026quot;\u0026gt;}}\r{{\u0026lt;carte image=\u0026quot;image\u0026quot; [diapo=\u0026quot;diapo\u0026quot;] [titre=\u0026quot;titre\u0026quot;] [lien=\u0026quot;lien\u0026quot;] [pdf=\u0026quot;pdf\u0026quot;] [taille=\u0026quot;s m l xl\u0026quot;]\u0026gt;}} texte... {{\u0026lt;/carte\u0026gt;}}\r{{\u0026lt;/cartes\u0026gt;}}\r{{\u0026lt;colonnes [two three]\u0026gt;}}...\u0026lt;---\u0026gt;...{{\u0026lt;/colonnes\u0026gt;}}\r{{\u0026lt;centre\u0026gt;}}...{{\u0026lt;/centre\u0026gt;}}\r{{\u0026lt;diaporama\u0026gt;}}\r{{\u0026lt;galerie [sous-repertoire]\u0026gt;}}\r{{\u0026lt;icone nomIcone\u0026gt;}}\r{{\u0026lt;image image=\u0026quot;/...\u0026quot; [lien=\u0026quot;lien\u0026quot;] [position=\u0026quot;gauche droite\u0026quot;] [taille=\u0026quot;s m l xl]\u0026quot; [forme=\u0026quot;ronde\u0026quot;]\u0026gt;}}\r{{\u0026lt;label label=\u0026quot;libellé\u0026quot; [icone=\u0026quot;nomIcone\u0026quot;] [lien=\u0026quot;lien\u0026quot;]\u0026gt;}}\r{{\u0026lt;message [info success warning error]\u0026gt;}}message{{\u0026lt;/message\u0026gt;}}\r{{\u0026lt;player \u0026quot;lien_vers_audio\u0026quot; [\u0026quot;titre\u0026quot;] [\u0026quot;boucle\u0026quot;]\u0026gt;}}\r{{\u0026lt; players répertoire\u0026gt;}}\r{{\u0026lt;repertoire \u0026quot;répertoire\u0026quot;\u0026gt;}}\r{{\u0026lt;toc\u0026gt;}}\r{{\u0026lt;texte [xs s m l xl] [rouge orange vert cyan bleu pourpre violet marron gris]\u0026gt;}}...{{\u0026lt;/texte\u0026gt;}}\rMarkdown # Titre 1 ## Titre 2 ### Titre 3 #### Titre 4 ##### Titre 5 ###### Titre 6  **gras** _soulignement_ ~~barré~~ Liste: - non ordonnée - non ordonnée - sous-liste non ordonée 1. numérotée 1. numérotée 1 sous-liste numérotée [Je suis un lien](https://www.google.com) ![][/image] | Tables | Sont | Frais | | -------------- |:---------------:| ------:| | col 3 est | aligné à droite | 1600 € | | col 2 est | centré | 12 € | | lignes zébrées | harmonieuses | 1 € | \u0026gt;citation ligne horizontale --- ","permalink":"/help/posts/resume-edit/","tags":["editeur"],"title":"Résumé des commandes de l'Éditeur de texte"},{"categories":null,"contents":"L\u0026rsquo;outil Filerobot permettra modifier l\u0026rsquo;image avec les fonctions que l\u0026rsquo;on a l\u0026rsquo;habitude de trouver dans les éditeurs d\u0026rsquo;image.\n ","permalink":"/help/posts/image-edit/","tags":["editeur"],"title":"L'éditeur d'image"},{"categories":null,"contents":" Présentation L\u0026rsquo;outil en ligne DRAWIO a été intégré dans Victor. Nous pourrons ainsi illustré notre site de schémas.\n  Créer un nouveau dessin Dans l\u0026rsquo;interface Victor :\n ","permalink":"/help/posts/draw-edit/","tags":["editeur"],"title":"L'éditeur de diagrammes"},{"categories":null,"contents":"Guide pour l\u0026rsquo;administrateur technique\n  Je vous propose d\u0026rsquo;installer une plateforme complète pour héberger notre application Victor.\nNous utiliserons une VM (Machine Virtuelle) DEBIAN 10 avec le gestionnaire de conteneur Docker installé.\nCe document ne décrit pas l\u0026rsquo;installation d\u0026rsquo;une VM Debian et de Docker.\nPour ma part je loue une VPS Debian 10 Docker chez l\u0026rsquo;hébergeur OVH (1 vCore 2 Go 20 Go 1 domaine.eu pour 46.16 €/an)\nPrérequis du système hôte Système : Debian Buster\n\u0026gt;uname -a Linux vps-7d2d773f 4.19.0-16-cloud-amd64 #1 SMP Debian 4.19.181-1 (2021-03-19) x86_64 GNU/Linux Gestionnaire de conteneur Docker :\n\u0026gt;docker version Client: Docker Engine - Community Version: 20.10.5 API version: 1.41 Go version: go1.13.15 ... Server: Docker Engine - Community Engine: Version: 20.10.5 API version: 1.41 (minimum version 1.12) Go version: go1.13.15 ... \u0026gt;docker-compose version docker-compose version 1.21.0, build unknown docker-py version: 3.4.1 CPython version: 3.7.3 OpenSSL version: OpenSSL 1.1.1d 10 Sep 2019 La plateforme Docker   Notre plateforme sera composée de 4 containers :\n  Caddy Server le frontal web, c\u0026rsquo;est l\u0026rsquo;élément le plus important. Il sera chargé :  de contrôler le trafic http (:80) et https (:443) de renouveller le certificat lié au nom de domaine de gérer les authentifications pour certaines URI de rediriger les flux vers les autres containers en fonction des URI de journaliser les accès et les erreurs   Victor le container qui va administrer et servir les web-applications Hugo  Pour plus de confort, j\u0026rsquo;utilise\n  Portainer pour gérer graphiquement l\u0026rsquo;environnement Docker  Filebrowser pour manipuler les fichiers du répertoire partagé (volshare)  Les 4 containers ont accès à la même ressource de fichiers volshare et les échanges entre Caddy Server et les autres containers se font à travers le réseau privé web. Ces containers ne sont pas accessibles de l\u0026rsquo;extérieur.\nLa configuration de Docker se fait à travers le fichier /volshare/docker/docker-compose.yaml, Caddy Server via /volshare/docker/caddy/caddyfile.conf\nNous allons détailler tout cela ci-aprés.\nVolume partagé /volshare /volshare est le répertoire partagé entre tous les containers.\nIl aura la structure suivante :\n/volshare\r/logs\raccess.log access.0.log ... access.9.log\r/etc\r(les certificats du domaine)\r/bivouac\r(le site web Hugo administré par Victor)\r/filebrowser\rdatabase.db\r/data (le répertoire des données à sauvegarder)\r/store\r(le répertoire des fichiers statiques servi par Caddy)\r/bivouac\rbivouac_content --\u0026gt; ../../bivouac/content (lien symbolique)\r/docker (les fichiers de configuration des containers)\rdocker-compose.yaml\r/caddy\rcaddyfile.conf\r/filebrowser\rfilebrowser.conf\r/victor\rdockerfile\rhugo.yaml\r/bivouac\rdeploy.sh (script de déploiement sur un autre site)\rContainer Filebrowser    Filebrowser est un explorateur de fichiers en ligne.\nNous allons le régler pour explorer le répertoire /volshare du système hôte via l\u0026rsquo;url /fb\n/volshare/docker/docker-compose.yaml filebrowser:image:filebrowser/filebrowser:latestcontainer_name:filebrowserrestart:unless-stoppedvolumes:- /volshare:/srv- /volshare/filebrowser/database.db:/database.db- ./filebrowser/filebrowser.json:/.filebrowser.json networks:- web/volshare/docker/filebrowser/filebrowser.json { \u0026#34;port\u0026#34;: 80, \u0026#34;baseURL\u0026#34;: \u0026#34;/fb\u0026#34;, \u0026#34;address\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;log\u0026#34;: \u0026#34;stdout\u0026#34;, \u0026#34;database\u0026#34;: \u0026#34;/database.db\u0026#34;, \u0026#34;root\u0026#34;: \u0026#34;/srv\u0026#34;, } /volshare/docker/caddy/caddyfile.conf # filebrowser /fb redir /fb /fb/ reverse_proxy /fb/* filebrowser:80 Container Portainer    Portainer via son interface web permet de visualiser les ressources de la plateforme Docker, les containers, les images, les volumes, le réseau.\n/volshare/docker/docker-compose.yaml portainer:image:portainer/portainer-cecontainer_name:portainercommand:-H unix:///var/run/docker.sockrestart:unless-stoppedvolumes:- /var/run/docker.sock:/var/run/docker.socknetworks:- web/volshare/docker/caddy/caddyfile.conf # portainer  # on supprime le préfix /portainer après le routage redir /portainer /portainer/ route /portainer/* { uri strip_prefix /portainer reverse_proxy portainer:9000 } Container Victor   Ce container va héberger l\u0026rsquo;application Victor libre d\u0026rsquo;utilisation sur Github.\nVictor a été écrit dans le langage Golang.\nÀ noter que les 4 containers et Docker lui-même ont été développés en Golang\n/volshare/docker/docker-compose.yaml victor:build:context:victorimage:victorcontainer_name:victorrestart:unless-stoppeduser:1000:1000volumes:- /volshare:/volshare- ./victor/hugo.yaml:/src/victor/conf/hugo.yamlnetworks:- web/volshare/docker/victor/hugo.yaml # Liste des webapp victor à gérerhugoapp:- name:bivouactitle:\u0026#34;Bivouac Admin\u0026#34;folder:\u0026#34;/volshare/bivouac\u0026#34;baseurl:\u0026#34;/bivouac/\u0026#34;theme:\u0026#34;beedream\u0026#34;themehelp:\u0026#34;https://pbillerot.freeboxos.fr/beedream/\u0026#34;deploy:\u0026#34;/volshare/docker/bivouac/deploy.sh/volshare/docker/caddy/caddyfile.conf # victor # qui va servir les webapp hugo décrites dans hugo.yaml reverse_proxy /* victor:8080 # PROTECTION par mot de passe pour les uri /victor /hugo # user: admin password: admin (qui a été haché par la commande ci-dessous) # docker container exec -it caddy /bin/sh # puis # caddy hash-password [--plaintext \u0026lt;password\u0026gt;] basicauth /victor/* { admin JDJhJDE0JGRKNmt6a3g5L1BlSXRmbmVWV2RXeU9Lc2NlZzFGUnV6eHFyYlVYOUFGc3FmL3NsSS5zRXdt } basicauth /hugo/* { admin JDJhJDE0JGRKNmt6a3g5L1BlSXRmbmVWV2RXeU9Lc2NlZzFGUnV6eHFyYlVYOUFGc3FmL3NsSS5zRXdt } Image Victor Ci-après le script qui permet de construire l\u0026rsquo;image Victor.\nÀ noter que ce container intègre le moteur Hugo et des utilitaires Git SSH et Ftp pour déployer les sites sur des serveurs externes\n/volshare/docker/victor/dockerfile # IMAGE VICTOR# ETAPE COMPILATION# Le GOPATH par défaut de cette image est /go.FROMgolang:alpine as goalpine# Installation de GCC et GITRUN apk add build-base git# Installation de victorWORKDIR/srcRUN git clone https://github.com/pbillerot/victor.gitWORKDIR/src/victor# Build avec CGORUN GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o /src/victor/victor# ETAPE GENERATION D\u0026#39;UN IMAGE # avec le projetFROMalpine# Installation de victor...RUN mkdir -p /src/victorcopy --from=goalpine /src/victor /src/victor# Uptade OS + hugo + utilitairesRUN apk add --update nano openssh-client hugo git rsync sshpass lftp# Ajout du user 1000 afin de partager les fichiers avec le user du serveur hôteRUN addgroup -g 1000 -S vigo \u0026amp;\u0026amp; \\  adduser -u 1000 -S vigo -G vigo# Point d\u0026#39;entréeWORKDIR/src/victorENTRYPOINT ./victor# Le port sur lequel notre serveur écouteEXPOSE8080Container Caddy /volshare/docker/docker-compose.yaml Version complète\nÀ seul ce container présente des ports accessible de l\u0026rsquo;extérieur (ports 80 et 443)\nversion:\u0026#34;3.3\u0026#34;services:caddy:# https://hub.docker.com/_/caddy?tab=descriptionimage:caddy:latestcontainer_name:caddyrestart:unless-stoppedports:- \u0026#39;80:80\u0026#39;- \u0026#39;443:443\u0026#39;volumes:- \u0026#39;./caddy/caddyfile.conf:/etc/caddy/Caddyfile\u0026#39;- \u0026#39;/volshare/etc:/data\u0026#39;- \u0026#39;/volshare/data/store:/srv\u0026#39;- \u0026#39;/volshare:/volshare\u0026#39;networks:- webfilebrowser:...portainer:...victor:...volumes:certs:networks:web:driver:bridge/volshare/docker/caddy/caddyfile.conf Version complète\nDans ce fichier on trouvera :\n l'email qui sera utilisé pour demander le certificat SSL du domaine le nom du domaine du site éventuellement la liste de d\u0026rsquo;adresses IP indésirables les répertoires servis par l\u0026rsquo;explorateur web intégré à Caddy Server les fichiers logs et enfin les différents reverse_proxy redirigés vers nos containers (qui ont été détaillés plus haut)  # Configuration du serveur Caddy # https://caddyserver.com/docs/ # GLOBAL option # https://www.ssllabs.com/ssltest/analyze.html?d=mon.domaine.com { email mon.email@gmail.com } # HOST mon.domaine.com # blacklist - sites indésirables @blaklist { remote_ip 94.130.212.180 134.119.20.10 } handle @blaklist { respond \u0026#34;Refused!\u0026#34; 403 } # Serveur de fichiers statiques redir /store /store/ handle_path /store/* { root * /volshare/data/store file_server browse } # Log du trafic (rotation automatique tous les 100 Mo (10 logs)  log { output file /volshare/log/access.log format single_field common_log } # filebrowser # ... # portainer # ... # victor # ... Procédure d\u0026rsquo;installation cd /volshare/docker # création/mise à jour des containers avec reconstruction des images docker-compose up -d --build # creation/mise à jour des containers sans reconstruction des images docker-compose up -d # nettoyage des images intermédiaires docker image prune -f Démarrage de Victor   Dans votre navigateur préféré taper l\u0026rsquo;URL :\n https://mon.domaine.fr/victor\npuis renseigner le code utilisateur et son mot de passe que vous avez configuré\net vous devriez avoir l\u0026rsquo;écran d\u0026rsquo;accueil de Victor :\n","permalink":"/help/posts/installation/","tags":["technique"],"title":"Installation de Victor"},{"categories":null,"contents":" Préalable Le site Hugo devra être créé par les procédures décrites dans la documentation en ligne Quick Start.\nVous pouvez aussi regarder la documentation d\u0026rsquo;installation du thème beedream.\nEn résultat vous devriez avoir une structure qui ressemble à cela :\nbeefree/ (répertoire racine du site)\r├── archetypes\r│ └── default.md (le modèle des documents)\r├── config.toml (fichier de configuration et de personnalisation du site)\r│ ou config.yaml\r├── content (le contenu du site)\r│ ├── rep-1\r│ │ └── doc-1.md │ └── rep-2\r│ └── doc-2.md ├── data (données éventuelles)\r├── layouts (modèles de présentation de certaines pages)\r├── data (données éventuelles)\r├── resources (fichiers de resources)\r│ └── _gen\r│ ├── assets\r│ └── images\r├── static (fichiers css js image)\r└── themes (répertoire des thèmes)\r└── beedream\rDéclaration du site Hugo La déclaration se fera dans le fichier de configuration\nhugo.yaml # Liste des webapp victor à gérerhugoapp:# nom du site- name:beefree# titre du site dans l\u0026#39;application Victor (et nom pas le titre du site Hugo)title:\u0026#34;Beefree Admin\u0026#34;# répertoire racine du répertoire hugofolder:\u0026#34;/volshare/beefree\u0026#34;# chemin d\u0026#39;accès du site en PRODUCTIONbaseurl:\u0026#34;/beefree/\u0026#34;# ou \u0026#34;/\u0026#34;# theme du site Hugotheme:\u0026#34;beedream\u0026#34;# aide en ligne du thèmethemehelp:\u0026#34;https://www.billerot.eu/beedream/\u0026#34;# script de déploiement de la production sur un autre site (commandes ftp, rsync ...)deploy:\u0026#34;/volshare/docker/beefree/deploy.sh\u0026#34;# Libellé dans Victor du menu de lancement du déploiementdeploylabel:\u0026#34;Deployer la production sur le site OVH...\u0026#34;# autre site...- name:hydetitle:\u0026#34;Hyde Admin\u0026#34;folder:\u0026#34;/volshare/hyde\u0026#34;baseurl:\u0026#34;/hyde/\u0026#34;theme:\u0026#34;hyde\u0026#34;themehelp:\u0026#34;https://github.com/spf13/hyde\u0026#34;Les fichiers de configurations de Hugo Le fichier de configuration du site est localisé directement sous la racine.\nracine\r├── content\r│ ...\r│ └── site\r│ └── config.yaml -\u0026gt; ../../config.yaml\r├── config.yaml\rIl peut être intéressant de donner la possiblité de le modifier directement dans l\u0026rsquo;interface Victor.\nPour se faire, vous pouvez créer un lien symbolique par exemple sous content/site/config.yaml qui pointerai sur le fichier de config du site.\nmkdir content/site cd content/site ln -s ../../config.yaml config.yaml    Script de déploiement Si le site de développement n\u0026rsquo;est pas sur le site de déploiement, l\u0026rsquo;administrateur technique devra écrire un script de déploiement.\nLors des étapes de test, Victor pilote Hugo pour générer les fichiers dans le répertoire private. Ce répertoire est actualisé à chaque modification/ajout/suppression de fichiers dans content\nLa génération du site de production se fera dans le répertoire public (répertoire par défaut de Hugo).\nracine\r├── content\r│ ...\r├── private\r│ ... fichiers du site de test ├── public\r│ ... fichiers du site de production\r├── config.yaml\rLe script de déploiement devra par conséquent recopier le répertoire public sur le site de déploiement.\nLors de l\u0026rsquo;exécution du script Victor se positionne sous le répertoire racine de site Hugo.\nExemple de script en utilisant le script lftp\n#!/bin/bash  echo Deploiement en cours... lftp sftp://user:password@site-production.com -e \u0026#34;mirror --delete --reverse public /www/beefree; quit\u0026#34; echo Deploiement end.. ","permalink":"/help/posts/new-site/","tags":["technique"],"title":"Déclaration d'un site Hugo"},{"categories":null,"contents":" Introduction La construction d\u0026rsquo;un site passera par plusieurs étapes :    L'expression des besoins  Quelles types d\u0026rsquo;informations seront publièes ? Événements périodiques à gérer Catégorisations, menus Comment rechercher une information ? Pour quel public ? Qui va administrer le site ?   Quel design, quel ergonomie pour le site  choix du thème la navigation dans les menus et catégorisations      Développement du site  organisation des répertoires Identification du site, Titre, Logo, Contacts, Informations légales Images, illustrations Rédaction des documents Classement, News, catégorisations   Test  Victor permet de visualiser \u0026ldquo;en live\u0026rdquo; dès le début le site en construction dans une fenêtre séparée   Mise en production  Via la commande de mise en production, Victor va transférer le site de test sur le site de production   Déploiement  Eventuellement Victor ajoute une étape supplémentaire quand par exemple le site de développement n\u0026rsquo;est pas sur le site de développement. L\u0026rsquo;administrateur technique devra mettre en place préalablement le script de déploiement      Pilotage du cycle de vie Le pilotage du cycle de vie est accessible dans Victor via le menu vertical  ","permalink":"/help/posts/publier/","tags":["explorateur"],"title":"Cycle de vie"}]